package com.khoi.lab.entity;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * Unit tests for the DonationPaymentCode entity.
 * This class tests the basic functionality of the entity, including
 * constructors,
 * getters, setters, and the toString() method.
 */
public class DonationPaymentCodeTest {
    private DonationPaymentCode donationPaymentCode;
    private static final String TEST_CODE = "XYZ123ABC";

    @BeforeEach
    void setUp() {
        // Create a fresh instance of the entity for each test
        this.donationPaymentCode = new DonationPaymentCode(TEST_CODE);
    }

    @Test
    void testConstructorWithValidCode() {
        // Verify that the constructor correctly sets the code
        assertNotNull(donationPaymentCode, "DonationPaymentCode instance should not be null.");
        assertEquals(TEST_CODE, donationPaymentCode.getCode(), "The code should be set correctly by the constructor.");
        // The ID should be null initially as it's generated by the database
        assertNull(donationPaymentCode.getId(), "The ID should be null before it is set.");
    }

    @Test
    void testGettersAndSetters() {
        // Test the ID setter and getter
        Long testId = 1L;
        donationPaymentCode.setId(testId);
        assertEquals(testId, donationPaymentCode.getId(), "The ID getter should return the value set by the setter.");

        // Test the code setter and getter
        String newCode = "NEW456DEF";
        donationPaymentCode.setCode(newCode);
        assertEquals(newCode, donationPaymentCode.getCode(),
                "The code getter should return the value set by the setter.");
    }
}
